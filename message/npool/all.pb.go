// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.0--rc1
// source: npool/all.proto

package npool

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SuccessCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *SuccessCode) Reset() {
	*x = SuccessCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_all_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuccessCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuccessCode) ProtoMessage() {}

func (x *SuccessCode) ProtoReflect() protoreflect.Message {
	mi := &file_npool_all_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuccessCode.ProtoReflect.Descriptor instead.
func (*SuccessCode) Descriptor() ([]byte, []int) {
	return file_npool_all_proto_rawDescGZIP(), []int{0}
}

func (x *SuccessCode) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// GetSignInfo 参数
type GetSignInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoinId      int32  `protobuf:"varint,1,opt,name=coin_id,json=coinId,proto3" json:"coin_id,omitempty"`
	AddressSend string `protobuf:"bytes,2,opt,name=address_send,json=addressSend,proto3" json:"address_send,omitempty"`
}

func (x *GetSignInfoRequest) Reset() {
	*x = GetSignInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_all_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSignInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSignInfoRequest) ProtoMessage() {}

func (x *GetSignInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_all_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSignInfoRequest.ProtoReflect.Descriptor instead.
func (*GetSignInfoRequest) Descriptor() ([]byte, []int) {
	return file_npool_all_proto_rawDescGZIP(), []int{1}
}

func (x *GetSignInfoRequest) GetCoinId() int32 {
	if x != nil {
		return x.CoinId
	}
	return 0
}

func (x *GetSignInfoRequest) GetAddressSend() string {
	if x != nil {
		return x.AddressSend
	}
	return ""
}

// GetSignInfo 返回
type SignInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataJson string `protobuf:"bytes,1,opt,name=data_json,json=dataJson,proto3" json:"data_json,omitempty"`
}

func (x *SignInfo) Reset() {
	*x = SignInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_all_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignInfo) ProtoMessage() {}

func (x *SignInfo) ProtoReflect() protoreflect.Message {
	mi := &file_npool_all_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignInfo.ProtoReflect.Descriptor instead.
func (*SignInfo) Descriptor() ([]byte, []int) {
	return file_npool_all_proto_rawDescGZIP(), []int{2}
}

func (x *SignInfo) GetDataJson() string {
	if x != nil {
		return x.DataJson
	}
	return ""
}

// BroadcastScript 参数
type BroadcastScriptRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoinId            int32  `protobuf:"varint,1,opt,name=coin_id,json=coinId,proto3" json:"coin_id,omitempty"`
	ReviewId          uint32 `protobuf:"varint,2,opt,name=review_id,json=reviewId,proto3" json:"review_id,omitempty"`
	TransactionScript string `protobuf:"bytes,3,opt,name=transaction_script,json=transactionScript,proto3" json:"transaction_script,omitempty"`
}

func (x *BroadcastScriptRequest) Reset() {
	*x = BroadcastScriptRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_all_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadcastScriptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadcastScriptRequest) ProtoMessage() {}

func (x *BroadcastScriptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_all_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadcastScriptRequest.ProtoReflect.Descriptor instead.
func (*BroadcastScriptRequest) Descriptor() ([]byte, []int) {
	return file_npool_all_proto_rawDescGZIP(), []int{3}
}

func (x *BroadcastScriptRequest) GetCoinId() int32 {
	if x != nil {
		return x.CoinId
	}
	return 0
}

func (x *BroadcastScriptRequest) GetReviewId() uint32 {
	if x != nil {
		return x.ReviewId
	}
	return 0
}

func (x *BroadcastScriptRequest) GetTransactionScript() string {
	if x != nil {
		return x.TransactionScript
	}
	return ""
}

// StatusScript 参数
type StatusScriptRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoinId        int32  `protobuf:"varint,1,opt,name=coin_id,json=coinId,proto3" json:"coin_id,omitempty"`
	ReviewId      uint32 `protobuf:"varint,2,opt,name=review_id,json=reviewId,proto3" json:"review_id,omitempty"`
	TransactionId string `protobuf:"bytes,3,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
}

func (x *StatusScriptRequest) Reset() {
	*x = StatusScriptRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_all_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusScriptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusScriptRequest) ProtoMessage() {}

func (x *StatusScriptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_all_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusScriptRequest.ProtoReflect.Descriptor instead.
func (*StatusScriptRequest) Descriptor() ([]byte, []int) {
	return file_npool_all_proto_rawDescGZIP(), []int{4}
}

func (x *StatusScriptRequest) GetCoinId() int32 {
	if x != nil {
		return x.CoinId
	}
	return 0
}

func (x *StatusScriptRequest) GetReviewId() uint32 {
	if x != nil {
		return x.ReviewId
	}
	return 0
}

func (x *StatusScriptRequest) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

// StatusScript 返回
type ScriptInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataJson string `protobuf:"bytes,1,opt,name=data_json,json=dataJson,proto3" json:"data_json,omitempty"`
}

func (x *ScriptInfo) Reset() {
	*x = ScriptInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_all_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScriptInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScriptInfo) ProtoMessage() {}

func (x *ScriptInfo) ProtoReflect() protoreflect.Message {
	mi := &file_npool_all_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScriptInfo.ProtoReflect.Descriptor instead.
func (*ScriptInfo) Descriptor() ([]byte, []int) {
	return file_npool_all_proto_rawDescGZIP(), []int{5}
}

func (x *ScriptInfo) GetDataJson() string {
	if x != nil {
		return x.DataJson
	}
	return ""
}

// AcceptNode 参数
type NodeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoinId     int32  `protobuf:"varint,1,opt,name=coin_id,json=coinId,proto3" json:"coin_id,omitempty"`
	IpUint64   uint64 `protobuf:"varint,2,opt,name=ip_uint64,json=ipUint64,proto3" json:"ip_uint64,omitempty"`
	IpIsPublic bool   `protobuf:"varint,3,opt,name=ip_is_public,json=ipIsPublic,proto3" json:"ip_is_public,omitempty"`
	MacAddress string `protobuf:"bytes,4,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	Location   string `protobuf:"bytes,5,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *NodeInfo) Reset() {
	*x = NodeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_all_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeInfo) ProtoMessage() {}

func (x *NodeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_npool_all_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeInfo.ProtoReflect.Descriptor instead.
func (*NodeInfo) Descriptor() ([]byte, []int) {
	return file_npool_all_proto_rawDescGZIP(), []int{6}
}

func (x *NodeInfo) GetCoinId() int32 {
	if x != nil {
		return x.CoinId
	}
	return 0
}

func (x *NodeInfo) GetIpUint64() uint64 {
	if x != nil {
		return x.IpUint64
	}
	return 0
}

func (x *NodeInfo) GetIpIsPublic() bool {
	if x != nil {
		return x.IpIsPublic
	}
	return false
}

func (x *NodeInfo) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

func (x *NodeInfo) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

// RegisterUser 参数
type RegisterUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int32 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CoinId int32 `protobuf:"varint,2,opt,name=coin_id,json=coinId,proto3" json:"coin_id,omitempty"`
}

func (x *RegisterUserRequest) Reset() {
	*x = RegisterUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_all_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterUserRequest) ProtoMessage() {}

func (x *RegisterUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_all_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterUserRequest.ProtoReflect.Descriptor instead.
func (*RegisterUserRequest) Descriptor() ([]byte, []int) {
	return file_npool_all_proto_rawDescGZIP(), []int{7}
}

func (x *RegisterUserRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *RegisterUserRequest) GetCoinId() int32 {
	if x != nil {
		return x.CoinId
	}
	return 0
}

// RegisterUser 返回
type UserAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   int32  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CoinId   int32  `protobuf:"varint,2,opt,name=coin_id,json=coinId,proto3" json:"coin_id,omitempty"`
	Datetime uint64 `protobuf:"varint,3,opt,name=datetime,proto3" json:"datetime,omitempty"`
	Address  string `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *UserAddress) Reset() {
	*x = UserAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_all_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAddress) ProtoMessage() {}

func (x *UserAddress) ProtoReflect() protoreflect.Message {
	mi := &file_npool_all_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAddress.ProtoReflect.Descriptor instead.
func (*UserAddress) Descriptor() ([]byte, []int) {
	return file_npool_all_proto_rawDescGZIP(), []int{8}
}

func (x *UserAddress) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserAddress) GetCoinId() int32 {
	if x != nil {
		return x.CoinId
	}
	return 0
}

func (x *UserAddress) GetDatetime() uint64 {
	if x != nil {
		return x.Datetime
	}
	return 0
}

func (x *UserAddress) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

// WithdrawApply 参数
type WithdrawApplyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   int32   `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CoinId   int32   `protobuf:"varint,2,opt,name=coin_id,json=coinId,proto3" json:"coin_id,omitempty"`
	Amount   float64 `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Datetime uint64  `protobuf:"varint,4,opt,name=datetime,proto3" json:"datetime,omitempty"`
	SigSalt  uint64  `protobuf:"varint,5,opt,name=sig_salt,json=sigSalt,proto3" json:"sig_salt,omitempty"`
	SignUser string  `protobuf:"bytes,6,opt,name=sign_user,json=signUser,proto3" json:"sign_user,omitempty"`
	Address  string  `protobuf:"bytes,7,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *WithdrawApplyRequest) Reset() {
	*x = WithdrawApplyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_all_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawApplyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawApplyRequest) ProtoMessage() {}

func (x *WithdrawApplyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_all_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawApplyRequest.ProtoReflect.Descriptor instead.
func (*WithdrawApplyRequest) Descriptor() ([]byte, []int) {
	return file_npool_all_proto_rawDescGZIP(), []int{9}
}

func (x *WithdrawApplyRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *WithdrawApplyRequest) GetCoinId() int32 {
	if x != nil {
		return x.CoinId
	}
	return 0
}

func (x *WithdrawApplyRequest) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *WithdrawApplyRequest) GetDatetime() uint64 {
	if x != nil {
		return x.Datetime
	}
	return 0
}

func (x *WithdrawApplyRequest) GetSigSalt() uint64 {
	if x != nil {
		return x.SigSalt
	}
	return 0
}

func (x *WithdrawApplyRequest) GetSignUser() string {
	if x != nil {
		return x.SignUser
	}
	return ""
}

func (x *WithdrawApplyRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

// RechargeUser 参数
type RechargeUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   int32   `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CoinId   int32   `protobuf:"varint,2,opt,name=coin_id,json=coinId,proto3" json:"coin_id,omitempty"`
	Amount   float64 `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Datetime uint64  `protobuf:"varint,4,opt,name=datetime,proto3" json:"datetime,omitempty"`
	Address  string  `protobuf:"bytes,5,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *RechargeUserRequest) Reset() {
	*x = RechargeUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_all_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RechargeUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RechargeUserRequest) ProtoMessage() {}

func (x *RechargeUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_all_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RechargeUserRequest.ProtoReflect.Descriptor instead.
func (*RechargeUserRequest) Descriptor() ([]byte, []int) {
	return file_npool_all_proto_rawDescGZIP(), []int{10}
}

func (x *RechargeUserRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *RechargeUserRequest) GetCoinId() int32 {
	if x != nil {
		return x.CoinId
	}
	return 0
}

func (x *RechargeUserRequest) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *RechargeUserRequest) GetDatetime() uint64 {
	if x != nil {
		return x.Datetime
	}
	return 0
}

func (x *RechargeUserRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

// WithdrawConfirmed 参数
type WithdrawConfirmedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReviewId uint32 `protobuf:"varint,1,opt,name=review_id,json=reviewId,proto3" json:"review_id,omitempty"`
}

func (x *WithdrawConfirmedRequest) Reset() {
	*x = WithdrawConfirmedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_all_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawConfirmedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawConfirmedRequest) ProtoMessage() {}

func (x *WithdrawConfirmedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_all_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawConfirmedRequest.ProtoReflect.Descriptor instead.
func (*WithdrawConfirmedRequest) Descriptor() ([]byte, []int) {
	return file_npool_all_proto_rawDescGZIP(), []int{11}
}

func (x *WithdrawConfirmedRequest) GetReviewId() uint32 {
	if x != nil {
		return x.ReviewId
	}
	return 0
}

// GetList 参数
type GetListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoinId    int32 `protobuf:"varint,1,opt,name=coin_id,json=coinId,proto3" json:"coin_id,omitempty"`
	ReturnAll bool  `protobuf:"varint,2,opt,name=return_all,json=returnAll,proto3" json:"return_all,omitempty"`
}

func (x *GetListRequest) Reset() {
	*x = GetListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_all_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListRequest) ProtoMessage() {}

func (x *GetListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_all_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListRequest.ProtoReflect.Descriptor instead.
func (*GetListRequest) Descriptor() ([]byte, []int) {
	return file_npool_all_proto_rawDescGZIP(), []int{12}
}

func (x *GetListRequest) GetCoinId() int32 {
	if x != nil {
		return x.CoinId
	}
	return 0
}

func (x *GetListRequest) GetReturnAll() bool {
	if x != nil {
		return x.ReturnAll
	}
	return false
}

// GetList 返回
type ReviewList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*ReviewRow `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ReviewList) Reset() {
	*x = ReviewList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_all_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReviewList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReviewList) ProtoMessage() {}

func (x *ReviewList) ProtoReflect() protoreflect.Message {
	mi := &file_npool_all_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReviewList.ProtoReflect.Descriptor instead.
func (*ReviewList) Descriptor() ([]byte, []int) {
	return file_npool_all_proto_rawDescGZIP(), []int{13}
}

func (x *ReviewList) GetList() []*ReviewRow {
	if x != nil {
		return x.List
	}
	return nil
}

// 单行审核数据（暂定）
type ReviewRow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId    int32   `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CoinId    int32   `protobuf:"varint,3,opt,name=coin_id,json=coinId,proto3" json:"coin_id,omitempty"`
	Amount    float64 `protobuf:"fixed64,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Datetime  int64   `protobuf:"varint,5,opt,name=datetime,proto3" json:"datetime,omitempty"`
	SigSalt   uint64  `protobuf:"varint,6,opt,name=sig_salt,json=sigSalt,proto3" json:"sig_salt,omitempty"`
	SignUser  string  `protobuf:"bytes,7,opt,name=sign_user,json=signUser,proto3" json:"sign_user,omitempty"`
	SignAdmin string  `protobuf:"bytes,8,opt,name=sign_admin,json=signAdmin,proto3" json:"sign_admin,omitempty"`
	Address   string  `protobuf:"bytes,9,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *ReviewRow) Reset() {
	*x = ReviewRow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_all_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReviewRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReviewRow) ProtoMessage() {}

func (x *ReviewRow) ProtoReflect() protoreflect.Message {
	mi := &file_npool_all_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReviewRow.ProtoReflect.Descriptor instead.
func (*ReviewRow) Descriptor() ([]byte, []int) {
	return file_npool_all_proto_rawDescGZIP(), []int{14}
}

func (x *ReviewRow) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReviewRow) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ReviewRow) GetCoinId() int32 {
	if x != nil {
		return x.CoinId
	}
	return 0
}

func (x *ReviewRow) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *ReviewRow) GetDatetime() int64 {
	if x != nil {
		return x.Datetime
	}
	return 0
}

func (x *ReviewRow) GetSigSalt() uint64 {
	if x != nil {
		return x.SigSalt
	}
	return 0
}

func (x *ReviewRow) GetSignUser() string {
	if x != nil {
		return x.SignUser
	}
	return ""
}

func (x *ReviewRow) GetSignAdmin() string {
	if x != nil {
		return x.SignAdmin
	}
	return ""
}

func (x *ReviewRow) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

// SetAdminPermission 参数
type SetAdminPermissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoinId       int32 `protobuf:"varint,1,opt,name=coin_id,json=coinId,proto3" json:"coin_id,omitempty"`
	AdminGroupId int32 `protobuf:"varint,2,opt,name=admin_group_id,json=adminGroupId,proto3" json:"admin_group_id,omitempty"`
	IsRevoke     bool  `protobuf:"varint,3,opt,name=is_revoke,json=isRevoke,proto3" json:"is_revoke,omitempty"`
}

func (x *SetAdminPermissionRequest) Reset() {
	*x = SetAdminPermissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_all_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAdminPermissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAdminPermissionRequest) ProtoMessage() {}

func (x *SetAdminPermissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_all_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAdminPermissionRequest.ProtoReflect.Descriptor instead.
func (*SetAdminPermissionRequest) Descriptor() ([]byte, []int) {
	return file_npool_all_proto_rawDescGZIP(), []int{15}
}

func (x *SetAdminPermissionRequest) GetCoinId() int32 {
	if x != nil {
		return x.CoinId
	}
	return 0
}

func (x *SetAdminPermissionRequest) GetAdminGroupId() int32 {
	if x != nil {
		return x.AdminGroupId
	}
	return 0
}

func (x *SetAdminPermissionRequest) GetIsRevoke() bool {
	if x != nil {
		return x.IsRevoke
	}
	return false
}

// ProcessReview 参数
type ProcessReviewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdminId   int32    `protobuf:"varint,1,opt,name=admin_id,json=adminId,proto3" json:"admin_id,omitempty"`
	IsReject  bool     `protobuf:"varint,2,opt,name=is_reject,json=isReject,proto3" json:"is_reject,omitempty"`
	IsApprove bool     `protobuf:"varint,3,opt,name=is_approve,json=isApprove,proto3" json:"is_approve,omitempty"`
	ReviewIds []uint32 `protobuf:"varint,4,rep,packed,name=review_ids,json=reviewIds,proto3" json:"review_ids,omitempty"`
}

func (x *ProcessReviewRequest) Reset() {
	*x = ProcessReviewRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_all_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessReviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessReviewRequest) ProtoMessage() {}

func (x *ProcessReviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_all_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessReviewRequest.ProtoReflect.Descriptor instead.
func (*ProcessReviewRequest) Descriptor() ([]byte, []int) {
	return file_npool_all_proto_rawDescGZIP(), []int{16}
}

func (x *ProcessReviewRequest) GetAdminId() int32 {
	if x != nil {
		return x.AdminId
	}
	return 0
}

func (x *ProcessReviewRequest) GetIsReject() bool {
	if x != nil {
		return x.IsReject
	}
	return false
}

func (x *ProcessReviewRequest) GetIsApprove() bool {
	if x != nil {
		return x.IsApprove
	}
	return false
}

func (x *ProcessReviewRequest) GetReviewIds() []uint32 {
	if x != nil {
		return x.ReviewIds
	}
	return nil
}

var File_npool_all_proto protoreflect.FileDescriptor

var file_npool_all_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x61, 0x6c, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x73, 0x70, 0x68, 0x69, 0x6e, 0x78, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x27, 0x0a, 0x0b, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x22, 0x50, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6f, 0x69,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x6f, 0x69, 0x6e,
	0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x73, 0x65,
	0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x53, 0x65, 0x6e, 0x64, 0x22, 0x27, 0x0a, 0x08, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x4a, 0x73, 0x6f, 0x6e, 0x22, 0x7d,
	0x0a, 0x16, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6f, 0x69, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x6f, 0x69, 0x6e, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x49, 0x64, 0x12, 0x2d,
	0x0a, 0x12, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x22, 0x72, 0x0a,
	0x13, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x6f, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x22, 0x29, 0x0a, 0x0a, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x1b, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x4a, 0x73, 0x6f, 0x6e, 0x22, 0x9f, 0x01, 0x0a,
	0x08, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6f, 0x69,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x6f, 0x69, 0x6e,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x70, 0x5f, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x69, 0x70, 0x55, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x12,
	0x20, 0x0a, 0x0c, 0x69, 0x70, 0x5f, 0x69, 0x73, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x70, 0x49, 0x73, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x63, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x61, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x47,
	0x0a, 0x13, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x63, 0x6f, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x75, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x63, 0x6f, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x65,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65,
	0x74, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xce,
	0x01, 0x0a, 0x14, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41, 0x70, 0x70, 0x6c, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x63, 0x6f, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x73, 0x69, 0x67, 0x5f, 0x73, 0x61, 0x6c, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x07, 0x73, 0x69, 0x67, 0x53, 0x61, 0x6c, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x69, 0x67,
	0x6e, 0x55, 0x73, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22,
	0x95, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x63, 0x6f, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x37, 0x0a, 0x18, 0x57, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x49, 0x64,
	0x22, 0x48, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x6f, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x61, 0x6c, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x41, 0x6c, 0x6c, 0x22, 0x36, 0x0a, 0x0a, 0x52, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x70, 0x68, 0x69, 0x6e, 0x78, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x6f, 0x77, 0x52, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x22, 0xf2, 0x01, 0x0a, 0x09, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x6f, 0x77,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6f, 0x69,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x6f, 0x69, 0x6e,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61,
	0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x61,
	0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x69, 0x67, 0x5f, 0x73, 0x61,
	0x6c, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x69, 0x67, 0x53, 0x61, 0x6c,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x77, 0x0a, 0x19, 0x53, 0x65, 0x74, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x6f, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x24, 0x0a,
	0x0e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65,
	0x22, 0x8c, 0x01, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x6a, 0x65, 0x63,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x52, 0x65, 0x6a, 0x65, 0x63,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x49, 0x64, 0x73, 0x32,
	0xdb, 0x02, 0x0a, 0x0a, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x64,
	0x0a, 0x0b, 0x47, 0x65, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x2e,
	0x73, 0x70, 0x68, 0x69, 0x6e, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x69, 0x67,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x73,
	0x70, 0x68, 0x69, 0x6e, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f, 0x76, 0x31, 0x2f, 0x77,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x2f, 0x73, 0x69, 0x67, 0x6e, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x12, 0x79, 0x0a, 0x0f, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73,
	0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x21, 0x2e, 0x73, 0x70, 0x68, 0x69, 0x6e, 0x78,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x53, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x73, 0x70, 0x68,
	0x69, 0x6e, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f,
	0x64, 0x65, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x22, 0x20, 0x2f, 0x76, 0x31, 0x2f,
	0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x2f, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x2f, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x3a, 0x01, 0x2a, 0x12,
	0x6c, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12,
	0x1e, 0x2e, 0x73, 0x70, 0x68, 0x69, 0x6e, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x15, 0x2e, 0x73, 0x70, 0x68, 0x69, 0x6e, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x12, 0x1d,
	0x2f, 0x76, 0x31, 0x2f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x2f,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x32, 0x6c, 0x0a,
	0x0b, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x5d, 0x0a, 0x0a,
	0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x13, 0x2e, 0x73, 0x70, 0x68,
	0x69, 0x6e, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x1a,
	0x16, 0x2e, 0x73, 0x70, 0x68, 0x69, 0x6e, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x22,
	0x17, 0x2f, 0x76, 0x31, 0x2f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x3a, 0x01, 0x2a, 0x32, 0xc7, 0x03, 0x0a, 0x07,
	0x54, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x67, 0x0a, 0x0c, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1e, 0x2e, 0x73, 0x70, 0x68, 0x69, 0x6e, 0x78,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x73, 0x70, 0x68, 0x69, 0x6e, 0x78,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22,
	0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x22, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x3a, 0x01, 0x2a,
	0x12, 0x6f, 0x0a, 0x0d, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41, 0x70, 0x70, 0x6c,
	0x79, 0x12, 0x1f, 0x2e, 0x73, 0x70, 0x68, 0x69, 0x6e, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x69,
	0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x73, 0x70, 0x68, 0x69, 0x6e, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1f, 0x22, 0x1a, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f,
	0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x3a, 0x01,
	0x2a, 0x12, 0x67, 0x0a, 0x0c, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x1e, 0x2e, 0x73, 0x70, 0x68, 0x69, 0x6e, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x73, 0x70, 0x68, 0x69, 0x6e, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x19, 0x22, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x72,
	0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x79, 0x0a, 0x11, 0x57, 0x69,
	0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x12,
	0x23, 0x2e, 0x73, 0x70, 0x68, 0x69, 0x6e, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x73, 0x70, 0x68, 0x69, 0x6e, 0x78, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x27, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x21, 0x22, 0x1c, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2f, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x72, 0x6d, 0x3a, 0x01, 0x2a, 0x32, 0xbc, 0x02, 0x0a, 0x06, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x12, 0x54, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x2e, 0x73, 0x70,
	0x68, 0x69, 0x6e, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x73, 0x70, 0x68, 0x69, 0x6e, 0x78, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x17, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x11, 0x12, 0x0f, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x74, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x2e, 0x73,
	0x70, 0x68, 0x69, 0x6e, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x73, 0x70, 0x68, 0x69, 0x6e, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1a, 0x22, 0x15, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2f, 0x70,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x01, 0x2a, 0x12, 0x66, 0x0a, 0x0d,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x1f, 0x2e,
	0x73, 0x70, 0x68, 0x69, 0x6e, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15,
	0x2e, 0x73, 0x70, 0x68, 0x69, 0x6e, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x22, 0x12, 0x2f,
	0x76, 0x31, 0x2f, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x3a, 0x01, 0x2a, 0x42, 0x29, 0x5a, 0x27, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x63, 0x79, 0x76, 0x61, 0x64, 0x72, 0x61, 0x2f, 0x73, 0x70, 0x68, 0x69, 0x6e,
	0x78, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_npool_all_proto_rawDescOnce sync.Once
	file_npool_all_proto_rawDescData = file_npool_all_proto_rawDesc
)

func file_npool_all_proto_rawDescGZIP() []byte {
	file_npool_all_proto_rawDescOnce.Do(func() {
		file_npool_all_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_all_proto_rawDescData)
	})
	return file_npool_all_proto_rawDescData
}

var file_npool_all_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_npool_all_proto_goTypes = []interface{}{
	(*SuccessCode)(nil),               // 0: sphinx.v1.SuccessCode
	(*GetSignInfoRequest)(nil),        // 1: sphinx.v1.GetSignInfoRequest
	(*SignInfo)(nil),                  // 2: sphinx.v1.SignInfo
	(*BroadcastScriptRequest)(nil),    // 3: sphinx.v1.BroadcastScriptRequest
	(*StatusScriptRequest)(nil),       // 4: sphinx.v1.StatusScriptRequest
	(*ScriptInfo)(nil),                // 5: sphinx.v1.ScriptInfo
	(*NodeInfo)(nil),                  // 6: sphinx.v1.NodeInfo
	(*RegisterUserRequest)(nil),       // 7: sphinx.v1.RegisterUserRequest
	(*UserAddress)(nil),               // 8: sphinx.v1.UserAddress
	(*WithdrawApplyRequest)(nil),      // 9: sphinx.v1.WithdrawApplyRequest
	(*RechargeUserRequest)(nil),       // 10: sphinx.v1.RechargeUserRequest
	(*WithdrawConfirmedRequest)(nil),  // 11: sphinx.v1.WithdrawConfirmedRequest
	(*GetListRequest)(nil),            // 12: sphinx.v1.GetListRequest
	(*ReviewList)(nil),                // 13: sphinx.v1.ReviewList
	(*ReviewRow)(nil),                 // 14: sphinx.v1.ReviewRow
	(*SetAdminPermissionRequest)(nil), // 15: sphinx.v1.SetAdminPermissionRequest
	(*ProcessReviewRequest)(nil),      // 16: sphinx.v1.ProcessReviewRequest
}
var file_npool_all_proto_depIdxs = []int32{
	14, // 0: sphinx.v1.ReviewList.list:type_name -> sphinx.v1.ReviewRow
	1,  // 1: sphinx.v1.WalletNode.GetSignInfo:input_type -> sphinx.v1.GetSignInfoRequest
	3,  // 2: sphinx.v1.WalletNode.BroadcastScript:input_type -> sphinx.v1.BroadcastScriptRequest
	4,  // 3: sphinx.v1.WalletNode.StatusScript:input_type -> sphinx.v1.StatusScriptRequest
	6,  // 4: sphinx.v1.WalletAgent.AcceptNode:input_type -> sphinx.v1.NodeInfo
	7,  // 5: sphinx.v1.Trading.RegisterUser:input_type -> sphinx.v1.RegisterUserRequest
	9,  // 6: sphinx.v1.Trading.WithdrawApply:input_type -> sphinx.v1.WithdrawApplyRequest
	10, // 7: sphinx.v1.Trading.RechargeUser:input_type -> sphinx.v1.RechargeUserRequest
	11, // 8: sphinx.v1.Trading.WithdrawConfirmed:input_type -> sphinx.v1.WithdrawConfirmedRequest
	12, // 9: sphinx.v1.Review.GetList:input_type -> sphinx.v1.GetListRequest
	15, // 10: sphinx.v1.Review.SetAdminPermission:input_type -> sphinx.v1.SetAdminPermissionRequest
	16, // 11: sphinx.v1.Review.ProcessReview:input_type -> sphinx.v1.ProcessReviewRequest
	2,  // 12: sphinx.v1.WalletNode.GetSignInfo:output_type -> sphinx.v1.SignInfo
	0,  // 13: sphinx.v1.WalletNode.BroadcastScript:output_type -> sphinx.v1.SuccessCode
	5,  // 14: sphinx.v1.WalletNode.StatusScript:output_type -> sphinx.v1.ScriptInfo
	0,  // 15: sphinx.v1.WalletAgent.AcceptNode:output_type -> sphinx.v1.SuccessCode
	8,  // 16: sphinx.v1.Trading.RegisterUser:output_type -> sphinx.v1.UserAddress
	0,  // 17: sphinx.v1.Trading.WithdrawApply:output_type -> sphinx.v1.SuccessCode
	0,  // 18: sphinx.v1.Trading.RechargeUser:output_type -> sphinx.v1.SuccessCode
	0,  // 19: sphinx.v1.Trading.WithdrawConfirmed:output_type -> sphinx.v1.SuccessCode
	13, // 20: sphinx.v1.Review.GetList:output_type -> sphinx.v1.ReviewList
	0,  // 21: sphinx.v1.Review.SetAdminPermission:output_type -> sphinx.v1.SuccessCode
	13, // 22: sphinx.v1.Review.ProcessReview:output_type -> sphinx.v1.ReviewList
	12, // [12:23] is the sub-list for method output_type
	1,  // [1:12] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_npool_all_proto_init() }
func file_npool_all_proto_init() {
	if File_npool_all_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_all_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuccessCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_all_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSignInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_all_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_all_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadcastScriptRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_all_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusScriptRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_all_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScriptInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_all_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_all_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_all_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_all_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawApplyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_all_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RechargeUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_all_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawConfirmedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_all_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_all_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReviewList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_all_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReviewRow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_all_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetAdminPermissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_all_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessReviewRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_all_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   4,
		},
		GoTypes:           file_npool_all_proto_goTypes,
		DependencyIndexes: file_npool_all_proto_depIdxs,
		MessageInfos:      file_npool_all_proto_msgTypes,
	}.Build()
	File_npool_all_proto = out.File
	file_npool_all_proto_rawDesc = nil
	file_npool_all_proto_goTypes = nil
	file_npool_all_proto_depIdxs = nil
}
