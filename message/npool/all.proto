syntax = "proto3";

package sphinx.v1;

option go_package = "github.com/cyvadra/sphinx/message/npool";

import "google/api/annotations.proto";

// 钱包节点
service WalletNode {
  // 获取预签名信息
  rpc GetSignInfo (GetSignInfoRequest) returns (SignInfo) {
    option (google.api.http) = {
      get: "/v1/wallet_node/sign_info"
    };}
  // 广播交易
  rpc BroadcastScript (BroadcastScriptRequest) returns (SuccessCode) {
    option (google.api.http) = {
      post: "/v1/wallet_node/script/broadcast"
      body: "*"
    };}
  // 查询交易状态
  rpc StatusScript (StatusScriptRequest) returns (ScriptInfo) {
    option (google.api.http) = {
      get: "/v1/wallet_node/script/status"
    };}
}

// 钱包代理
service WalletAgent {
  // 接收健康报告
  rpc AcceptNode (NodeInfo) returns (SuccessCode) {
    option (google.api.http) = {
      post: "/v1/wallet_agent/status"
      body: "*"
    };}
}

// 交易服务
service Trading {
  // 创建账户
  rpc RegisterUser (RegisterUserRequest) returns (UserAddress) {
    option (google.api.http) = {
      post: "/v1/account/register"
      body: "*"
    };}
  // 用户申请提现
  rpc WithdrawApply (WithdrawApplyRequest) returns (SuccessCode) {
    option (google.api.http) = {
      post: "/v1/account/withdraw/apply"
      body: "*"
    };}
  // （非主动） 充值购买 - 异步扫描收款地址通知回调
  rpc RechargeUser (RechargeUserRequest) returns (SuccessCode) {
    option (google.api.http) = {
      post: "/v1/account/recharge"
      body: "*"
    };}
  // （非主动） 确认提现 - 从消息队列中获取确认提现的数据并操作
  rpc WithdrawConfirmed (WithdrawConfirmedRequest) returns (SuccessCode) {
    option (google.api.http) = {
      post: "/v1/account/withdraw/confirm"
      body: "*"
    };}
}

// 审核服务
service Review {
  // 获取待审核列表
  rpc GetList (GetListRequest) returns (ReviewList) {
    option (google.api.http) = {
        get: "/v1/review/list"
    };}
  // 设置管理员的审核权限
  rpc SetAdminPermission (SetAdminPermissionRequest) returns (SuccessCode) {
    option (google.api.http) = {
        post: "/v1/review/permission"
        body: "*"
    };}
  // 审核交易
  rpc ProcessReview (ProcessReviewRequest) returns (ReviewList) {
    option (google.api.http) = {
        post: "/v1/review/process"
        body: "*"
    };}
}

  // 通用返回码
  message SuccessCode {
    bool success = 1;
  }

  // GetSignInfo 参数
  message GetSignInfoRequest {
    int32 coin_id = 1;
    string address_send = 2;
  }
  // GetSignInfo 返回
  message SignInfo {
    string data_json = 1;
  }

  // BroadcastScript 参数
  message BroadcastScriptRequest {
    int32 coin_id = 1;
    uint32 review_id = 2;
    string transaction_script = 3;
  }

  // StatusScript 参数
  message StatusScriptRequest {
    int32 coin_id = 1;
    uint32 review_id = 2;
    string transaction_id = 3;
  }
  // StatusScript 返回
  message ScriptInfo {
    string data_json = 1;
  }


  // AcceptNode 参数
  message NodeInfo {
    int32 coin_id = 1;
    uint64 ip_uint64 = 2;
    bool ip_is_public = 3;
    string mac_address = 4;
    string location = 5;
  }


  // RegisterUser 参数
  message RegisterUserRequest {
    int32 user_id = 1;
    int32 coin_id = 2;
  }
  // RegisterUser 返回
  message UserAddress {
    int32 user_id = 1;
    int32 coin_id = 2;
    uint64 timestamp_utc = 3;
    string address = 4;
  }

  // WithdrawApply 参数
  message WithdrawApplyRequest {
    int32 user_id = 1;
    int32 coin_id = 2;
    double amount = 3;
    uint64 timestamp_utc = 4;
    uint64 sig_salt = 5;
    string sign_user = 6;
    string address = 7;
  }

  // RechargeUser 参数
  message RechargeUserRequest {
    int32 user_id = 1;
    int32 coin_id = 2;
    double amount = 3;
    uint64 timestamp_utc = 4;
    string address = 5;
  }

  // WithdrawConfirmed 参数
  message WithdrawConfirmedRequest {
    uint32 review_id = 1;
  }

  // GetList 参数
  message GetListRequest {
    int32 coin_id = 1;
    bool return_all = 2;
  }
  // GetList 返回
  message ReviewList {
    repeated ReviewRow list = 1;
  }
  // 单行审核数据（暂定）
  message ReviewRow {
    uint32 id = 1;
    int32 user_id = 2;
    int32 coin_id = 3;
    double amount = 4;
    uint64 timestamp_utc = 5;
    uint64 sig_salt = 6;
    string sign_user = 7;
    string sign_admin = 8;
    string address = 9;
  }

  // SetAdminPermission 参数
  message SetAdminPermissionRequest {
    int32 coin_id = 1;
    int32 admin_group_id = 2;
    bool is_revoke = 3;
  }

  // ProcessReview 参数
  message ProcessReviewRequest {
    int32 admin_id = 1;
    bool is_reject = 2;
    bool is_approve = 3;
    repeated uint32 review_ids = 4;
  }

























