// Code generated by entc, DO NOT EDIT.

package keystore

const (
	// Label holds the string label denoting the keystore type in the database.
	Label = "key_store"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldAddress holds the string denoting the address field in the database.
	FieldAddress = "address"
	// FieldPrivateKey holds the string denoting the private_key field in the database.
	FieldPrivateKey = "private_key"
	// EdgeCoin holds the string denoting the coin edge name in mutations.
	EdgeCoin = "coin"
	// Table holds the table name of the keystore in the database.
	Table = "key_stores"
	// CoinTable is the table that holds the coin relation/edge.
	CoinTable = "key_stores"
	// CoinInverseTable is the table name for the CoinInfo entity.
	// It exists in this package in order to avoid circular dependency with the "coininfo" package.
	CoinInverseTable = "coin_infos"
	// CoinColumn is the table column denoting the coin relation/edge.
	CoinColumn = "coin_info_keys"
)

// Columns holds all SQL columns for keystore fields.
var Columns = []string{
	FieldID,
	FieldAddress,
	FieldPrivateKey,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "key_stores"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"coin_info_keys",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// AddressValidator is a validator for the "address" field. It is called by the builders before save.
	AddressValidator func(string) error
	// PrivateKeyValidator is a validator for the "private_key" field. It is called by the builders before save.
	PrivateKeyValidator func(string) error
)
